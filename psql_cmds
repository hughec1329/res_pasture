# postgrees and postgis install and setup notes
# 20130830 HCrockford
#

# install postgres
sudo apt-get install postgresql-9.1 postgis postgresql-9.1-postgis
# get access to db
sudo su postgres
# create user
createuser -d -E -i -l -P -r -s timlinux


#create templatea - from http://gis.stackexchange.com/questions/19432/why-does-postgis-installation-not-create-a-template-postgis

sudo su postgres
createdb template_postgis
psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/postgis-2.0/postgis.sql
psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/postgis-2.0/spatial_ref_sys.sql

# # create DB using template to auto enable postgis
# owne dby current user

createdb farm -T template_postgis
psql farm

# create farmer table

CREATE TABLE farmers (fid int not null primary key,
name varchar(50),
address varchar(50),
area int,
notes varchar(100))
;

# better to create from shapefile.
CREATE TABLE paddocks (fid int references farmers(fid) not null,
pid int not null primary key,
area int,
cover int,
notes varchar(100),
geom geography)
;

CREATE TABLE observations (
date TIMESTAMP WITH TIME ZONE not null,
obsno int not null,
fid int references farmers(fid) not null,
pid int references paddocks(pid) not null,
cover int,
notes varchar(100),
geom geometry)
;


INSERT INTO 	farmers (fid,name,address,area,notes)
		values (1003,'trevor and leigh indian', '97 ocean bvld, Jan Juc', 4000, 'useless dog called doug');

# in shell
createlang plpgsql farms
psql farms < /usr/share/postgresql/9.1/contrib/postgis-2.0/postgis.sql
psql farms < /usr/share/postgresql/9.1/contrib/postgis-2.0/spatial_ref_sys.sql


ALTER TABLE farmers ADD COLUMN the_geom geometry;

# to get shapefile from qgis into postgis - need to sort out shapefiles projection as SRI code.
shp2pgsql -s 4326 -d ~/mapping/farm_toJIZZ | psql -d farms

# merge two tables to find pid from survey results!!! DONE!
SELECT p.fid, p.pid, s.score FROM farm_tojizz p, survey s WHERE ST_CONTAINS(p.geom,s.geom);

# descending order on cover.
SELECT p.fid, p.pid, s.score as cover FROM farm_tojizz p, survey s WHERE ST_CONTAINS(p.geom,s.geom) ORDER BY cover DESC;
SELECT p.fid, p.pid, s.cover FROM farm_tojizz p, survey s WHERE ST_CONTAINS(p.geom,ST_Transform(s.geom,4326)) ORDER BY cover DESC;

############3
## form R
##############

# add geog column to obs
ALTER TABLE obs ADD COLUMN the_geog GEOGRAPHY;

#  read geog from string
UPDATE obs SET geography = ST_GeogFromText('POINT(' || lon || ' ' || lat || ')')

# proper spatial join - intersect allows geom and geog merge, contains only geom
SELECT o.dat as date, p.fid, p.pid,o.cover, o.notes, o.the_geom FROM pads p, obs o WHERE ST_INTERSECTS(p.geom, o.the_geom);
# as obs is geography, geog only allows st_intersects


# put obs into observations
INSERT INTO observations SELECT o.dat as date, p.fid, p.pid,o.cover, o.notes, o.the_geom FROM paddocks p, obs o WHERE ST_INTERSECTS(p.geom, o.the_geom);



######################
### new db - from shape file loaded via shp
###################
# better to create colum in postgres 

shp2pgsql -s 3111 -d ~/mapping/shp/juc_farms | psql -d farm
DROP TABLE paddocks_bak;
SELECT * INTO paddocks_bak FROM paddocks;
CREATE TABLE paddocks_new AS SELECT cast(fid as int), cast(pid as int),area, cast(cover as int), notes, geom from juc_farms;
alter table paddocks_new add column fpid int;
update paddocks_new set fpid = cast(fid::text || pid::text as int);
DROP TABLE juc_farms;
insert 
UPDATE paddocks p set geom = n.geom from paddocks_new WHERE p.pid = n.pid AND p.fid = n.fid;
# need to look for new paddocks -> match where pid and fid not there? - need to create fidpid.
INSERT 
UPDATE paddocks set date=NOW() WHERE date = '';
UPDATE paddocks SET area= st_area(geom)/1000;

# find new paddocks
alter table paddocks add column fpid int;
update paddocks set fpid = cast(fid::text || pid::text as int);

SELECT n.* FROM paddocks_new n, paddocks p where NOT (n.fpid = ANY(p.fpid));
## need to set triggers too.
#
# trigger play
#
# update

update paddocks p set cover = o.cover, notes = o.notes, date = o.date from observations o where p.pid = o.pid AND p.fid = o.fid AND o.date > p.date;

